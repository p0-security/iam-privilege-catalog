name: Kubernetes Engine Roles
description: >-
  A role is a set of permissions that defines a specific level of access to resources within a single namespace.
  It consists of rules that specify which API operations can be performed on specific resource types.
  Roles are scoped to a specific Kubernetes namespace.
scope: CRITICAL
notes: >-
  Roles are only definitions of permissions. A role does not take effect unless
  assigned to principal via a RoleBinding.
privileges:
  bind:
    risks: [escalation:lateral, escalation:privilege]
    notes: >-
      Allows escalating the current or other users' permissions by binding a Role to them. 
      Also requires the `container.roleBindings.create` or `container.roleBindings.update` permission.
    links:
      - https://kubernetes.io/docs/reference/access-authn-authz/rbac/#restrictions-on-role-binding-creation-or-update
  create:
    risks: []
    notes: >-
      Roles are only definitions of permissions. A role does not take effect unless
      assigned to principal via a RoleBinding.
      Kubernetes does not allow the creation or update of a Role unless one of the following two conditions are met:
      1) the caller already has the permissions contained in the role
      2) the caller has the `container.roles.escalate` permission
  delete:
    risks: [destruction:policy]
    notes: >-
      Roles that are attached to principals via a RoleBinding can be deleted in Kubernetes.
  escalate:
    risks: [escalation:lateral, escalation:privilege]
    notes: >-
      Allows escalating the current or other users' permissions by creating a new Role or updating an existing Role.
      Also requires the `container.roles.create` or `container.roles.update` permission.
    links:
      - https://kubernetes.io/docs/reference/access-authn-authz/rbac/#restrictions-on-role-creation-or-update
  get:
    risks: [discovery:policy]
    notes: >-
      Retrieves the permissions contained in a specific role.
  list:
    risks: [discovery:policy]
    notes: >-
      List all roles within a namespace
  update:
    risks: []
    notes: >-
      Kubernetes does not allow the creation or update of a Role unless one of the following two conditions are met:
      1) the caller already has the permissions contained in the role
      2) the caller has the `container.roles.escalate` permission
