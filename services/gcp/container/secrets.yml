name: Kubernetes Engine Secrets
description: >-
  A Kubernetes Secret is mounted as a volume on Pods. Secrets are similar to ConfigMaps but
  are meant for storing sensitive data.
scope: CRITICAL
notes: >-
  By default, secrets are stored unencrypted, and anyone who can read a Secret can read its contents (its `data` field).
  The Secret contents are mounted inside pods as files in the file system. Someone with ability to gain access into a Pod
  may freely read the contents of the secret.
mitigations:
  - Configure RBAC rules to limit read access to secrets
  - Configure encryption at rest for secrets
  - Use external Secret Providers
links:
  - https://kubernetes.io/docs/concepts/configuration/secret
  - https://kubernetes.io/docs/concepts/security/secrets-good-practices/
privileges:
  create:
    vulnerabilities: []
    notes: >-
      Creating a secret does not represent a security risk by itself.
  delete:
    vulnerabilities: [destruction:infra]
    notes: >-
      Deleting a secret may disrupt communication of workloads with the Kubernetes API server,
      or other services.
  get:
    vulnerabilities:
      - discovery:data
      - discovery:infra
      - escalation:lateral
      - escalation:privilege
    notes: >-
      By default, secrets are stored unencrypted in Kubernetes, and anyone who can read the secret
      has access to its contents.
  list:
    vulnerabilities:
      - discovery:data
      - discovery:infra
      - escalation:lateral
      - escalation:privilege
    notes: >-
      List all secrets in a specific namespace. Listing also allows reading the data field of each secret.
  update:
    vulnerabilities: [destruction:infra]
    notes: >-
      Allows updating the contents of the secret (the `data` field) unless `immutable` property was set to true.
