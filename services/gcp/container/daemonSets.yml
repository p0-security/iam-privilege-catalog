name: Kubernetes Engine DaemonSets
description: >-
  Control Kubernetes DaemonSets objects in a given cluster.
scope: CRITICAL
notes: >-
  DaemonSets manage pods, similar to ReplicaSets and StatefulSets. A DaemonSet ensures
  there is the desired number of pods running on each node. If DaemonSets are allowed to connect
  to the public internet, it may open up the door for arbitrary code execution for an attacker.
  See notes on `container/deployments` for mitigations.
privileges:
  create:
    vulnerabilities:
      - impact:spend
      - impact:hijack
      - escalation:lateral
      - escalation:network
    notes: >-
      Creation of DaemonSets allows running an image inside the Kubernetes cluster. This may allow arbitrary code
      execution, if the cluster has access to the public internet. The code will execute with service account privileges,
      leading to new permissions that may allow access to other GCP services. 
      Secondly, creating DaemonSets drains the limited resources available to other Kubernetes workloads.
  delete:
    vulnerabilities:
      - destruction:infra
      - destruction:data
      - destruction:logs
    notes: >-
      Deleting a DaemonSets deletes its pods and ephemeral volumes. Logs of the deleted pods disappear
      permanently when the pods shut down, unless they are exported to an external system for persistence.
  get:
    vulnerabilities:
      - discovery:infra
      - discovery:network
    notes: >-
      Describes detailed metadata about the DaemonSet, and Pods and Containers in it,
      such as ports, IP address, replicas, attached volumes, containers and the images
      they are running.
  getStatus:
    vulnerabilities:
      - discovery:infra
      - discovery:network
    notes: >-
      Equivalent to `container.daemonSets.get`. Allows reading the `/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}/status`
      subresource which returns the same payload as the `/apis/apps/v1/namespaces/{namespace}/daemonsets/{name}` resource.
  list:
    vulnerabilities:
      - discovery:infra
      - discovery:network
    notes: >-
      Allows listing all ReplicaSets in a namespace.
  update:
    vulnerabilities:
      - destruction:data
      - destruction:infra
      - destruction:network
      - escalation:lateral
      - escalation:network
      - impact:hijack
      - impact:spend
    notes: >-
      An update may let an attacker change the container image that is running inside pods. This may allow arbitrary code
      execution, if the cluster has access to the public internet. The code will execute with service account privileges,
      leading to new permissions that may allow access to other GCP services. Since DaemonSet runs a pod on multiple nodes,
      DaemonSets are especially great for a complete cluster takeover. Secondly, DaemonSet pods drain the limited resources
      available to other Kubernetes workloads.
  updateStatus:
    vulnerabilities: []
    scope: LOW
    notes: >-
      This subresource has no effect on the actual DaemonSets.
