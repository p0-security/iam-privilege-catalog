name: Deploy catalog

on:
  push:
    branches: [main]
  workflow_dispatch:

# By setting the concurrency to a constant string value,
# only one pipeline can run at the same time.
# Pipeline from another merge will be in pending state until
# the current pipeline finishes.
# If yet another merge happens, the pending pipeline is cancelled.
# (Only one pipeline is in pending state at any time)
# See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency: main-deploy

jobs:
  lint:
    uses: ./.github/workflows/lint.yml
    secrets: inherit
  validate:
    uses: ./.github/workflows/validate.yml
    secrets: inherit
  deploy:
    needs: [lint, validate]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    strategy:
      matrix:
        items:
          - project_number: "398809717501"
            environment: test
            project_id: p0-gcp-project
          - project_number: "615473322806"
            environment: stage
            project_id: p0-stage
          - project_number: "228132571547"
            environment: prod
            project_id: p0-prod
    steps:
      - id: checkout
        uses: actions/checkout@v3
      - id: auth
        uses: google-github-actions/auth@v1
        with:
          token_format: access_token
          workload_identity_provider: projects/${{ matrix.items.project_number }}/locations/global/workloadIdentityPools/${{ matrix.items.environment }}-id-pool/providers/${{ matrix.items.environment }}-gha-oidc-provider
          service_account: github-catalog-deploy-sa@${{ matrix.items.project_id }}.iam.gserviceaccount.com
          access_token_lifetime: 1200s
          create_credentials_file: true
      - uses: actions/setup-node@v3
        with:
          node-version: ^18.6.0
          cache: yarn
          cache-dependency-path: yarn.lock
      - run: sudo apt install -y jq
      - run: yarn install
      - run: yarn ts-node scripts/generate.ts
      - run: >-
          cat dist/risks.json | jq -c -r '.[]' > dist/risks.jsonl && \
            cat dist/privileges.json | jq -c -r '.gcp[]' > dist/privileges-gcp.jsonl && \
            gcloud auth login --cred-file $GOOGLE_APPLICATION_CREDENTIALS && \
            bq load --project_id ${{ matrix.items.project_id }} --replace --source_format NEWLINE_DELIMITED_JSON --autodetect iam_risk_2.privileges-gcp dist/privileges-gcp.jsonl && \
            bq load --project_id ${{ matrix.items.project_id }} --replace --source_format NEWLINE_DELIMITED_JSON --autodetect iam_risk_2.risks dist/risks.jsonl
